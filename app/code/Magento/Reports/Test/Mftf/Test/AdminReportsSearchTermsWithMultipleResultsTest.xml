<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminReportsSearchTermsWithMultipleResultsTest">
        <annotations>
            <features value="Reports"/>
            <stories value="Search Terms Report"/>
            <title value="Search Terms Report when Search Term has multiple results"/>
            <description value="Check if Search Terms report displays correct result when Search Term has multiple results"/>
            <severity value="AVERAGE"/>
            <group value="reports"/>
            <group value="mtf_migrated"/>
        </annotations>
        <before>
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="_defaultProduct" stepKey="createFirstProduct">
                <field key="name">{{SearchTermsData.productName1}}</field>
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="_defaultProduct" stepKey="createSecondProduct">
                <field key="name">{{SearchTermsData.productName2}}</field>
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="_defaultProduct" stepKey="createThirdProduct">
                <field key="name">{{SearchTermsData.productName3}}</field>
                <requiredEntity createDataKey="createCategory"/>
            </createData>
        </before>
        <after>
            <!-- Delete created data -->
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createFirstProduct" stepKey="deleteFirstProduct"/>
            <deleteData createDataKey="createSecondProduct" stepKey="deleteSecondProduct"/>
            <deleteData createDataKey="createThirdProduct" stepKey="deleteThirdProduct"/>
            <!-- Delete created Search term -->
            <actionGroup ref="AssertSearchTermSuccessDeleteMessageActionGroup" stepKey="deleteSearchTerm">
                <argument name="searchQuery" value="{{SearchTermsData.searchQuery}}"/>
            </actionGroup>
            <!-- Admin logout -->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logoutAdmin"/>
        </after>
        <!-- Go to frontend -->
        <actionGroup ref="StorefrontOpenHomePageActionGroup" stepKey="amOnHomePage"/>
        <!-- Search the term on frontend -->
        <actionGroup ref="StorefrontCheckQuickSearchStringActionGroup" stepKey="searchStorefront">
            <argument name="phrase" value="{{SearchTermsData.searchQuery}}"/>
        </actionGroup>
        <!-- Make sure that products were found -->
        <actionGroup ref="StorefrontQuickSearchSeeProductByNameActionGroup" stepKey="seeFirstProductInGrid">
            <argument name="productName" value="$createFirstProduct.name$"/>
        </actionGroup>
        <actionGroup ref="StorefrontQuickSearchSeeProductByNameActionGroup" stepKey="seeSecondProductInGrid">
            <argument name="productName" value="$createSecondProduct.name$"/>
        </actionGroup>
        <actionGroup ref="StorefrontQuickSearchSeeProductByNameActionGroup" stepKey="seeThirdProductInGrid">
            <argument name="productName" value="$createThirdProduct.name$"/>
        </actionGroup>
        <!-- Login to admin -->
        <actionGroup ref="AdminLoginActionGroup" stepKey="loginToAdminPanel"/>
        <!-- Open Search Terms Reports page in admin panel -->
        <actionGroup ref="AdminNavigateMenuActionGroup" stepKey="navigateToReportsSearchTermsPage">
            <argument name="menuUiId" value="{{AdminMenuReports.dataUiId}}"/>
            <argument name="submenuUiId" value="{{AdminMenuReportsSearchTerms.dataUiId}}"/>
        </actionGroup>
        <!-- Filter Reports with Search Term -->
        <actionGroup ref="AdminSearchTermsReportFilterQueryActionGroup" stepKey="filterReportsGrid">
            <argument name="searchQuery" value="{{SearchTermsData.searchQuery}}"/>
        </actionGroup>
        <!-- Grab the search result values -->
        <grabTextFrom selector="{{AdminSearchTermsReportMainSection.searchTermsReportsGridCell('1', 'Search Query')}}" stepKey="grabSearchQuery"/>
        <grabTextFrom selector="{{AdminSearchTermsReportMainSection.searchTermsReportsGridCell('1', 'Results')}}" stepKey="grabResults"/>
        <grabTextFrom selector="{{AdminSearchTermsReportMainSection.searchTermsReportsGridCell('1', 'Hits')}}" stepKey="grabHits"/>
        <!-- Assert that values in Grid are correct -->
        <assertEquals expected="{{SearchTermsData.searchQuery}}" expectedType="string" actual="$grabSearchQuery" stepKey="assertSearchQueryCorrect"/>
        <assertEquals expected="3" expectedType="string" actual="$grabResults" stepKey="assertNumResultsCorrect"/>
        <assertEquals expected="1" expectedType="string" actual="$grabHits" stepKey="assertNumHitsCorrect"/>
        <!-- Click on the filtered grid row -->
        <actionGroup ref="AdminSearchTermsReportGridClickRowActionGroup" stepKey="clickRowOnReportsGrid">
            <argument name="rowNumber" value="1"/>
        </actionGroup>
        <!-- Grab the search result values from the form -->
        <grabValueFrom selector="{{AdminSearchTermsReportFormSection.searchQueryInput}}" stepKey="grabFormSearchQuery"/>
        <grabValueFrom selector="{{AdminSearchTermsReportFormSection.numberOfResultsInput}}" stepKey="grabFormResults"/>
        <grabValueFrom selector="{{AdminSearchTermsReportFormSection.numberOfUsesInput}}" stepKey="grabFormHits"/>
        <!-- Assert that values on form are correct -->
        <assertEquals expected="{{SearchTermsData.searchQuery}}" expectedType="string" actual="$grabFormSearchQuery" stepKey="assertSearchQueryOnFormCorrect"/>
        <assertEquals expected="3" expectedType="string" actual="$grabFormResults" stepKey="assertNumResultsOnFormCorrect"/>
        <assertEquals expected="1" expectedType="string" actual="$grabFormHits" stepKey="assertNumHitsOnFormCorrect"/>
    </test>
</tests>
